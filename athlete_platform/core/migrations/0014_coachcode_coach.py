# Generated by Django 5.1.5 on 2025-03-09 19:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_alter_corebiometricdata_unique_together_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoachCode',
            fields=[
                ('code', models.CharField(help_text='Unique 6-character hexadecimal code for coach registration', max_length=6, primary_key=True, serialize=False)),
                ('is_used', models.BooleanField(default=False, help_text='Whether this code has been used')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(help_text='When this code expires')),
                ('created_by', models.ForeignKey(help_text='User who created this coach code', on_delete=django.db.models.deletion.CASCADE, related_name='created_coach_codes', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(help_text='Team this coach code is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='coach_codes', to='core.team')),
            ],
            options={
                'db_table': 'core_coach_code',
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the coach', primary_key=True, serialize=False)),
                ('can_view_athlete_data', models.BooleanField(default=True, help_text='Whether this coach can view athlete data')),
                ('can_edit_athlete_profiles', models.BooleanField(default=False, help_text='Whether this coach can edit athlete profiles')),
                ('can_create_training_plans', models.BooleanField(default=True, help_text='Whether this coach can create training plans')),
                ('can_invite_athletes', models.BooleanField(default=False, help_text='Whether this coach can invite athletes to the platform')),
                ('can_invite_coaches', models.BooleanField(default=False, help_text='Whether this coach can invite other coaches')),
                ('specialization', models.CharField(blank=True, help_text="Coach's area of specialization (e.g., 'Strength and Conditioning')", max_length=100)),
                ('bio', models.TextField(blank=True, help_text="Coach's biographical information")),
                ('coaching_experience_years', models.IntegerField(default=0, help_text='Years of coaching experience')),
                ('certifications', models.JSONField(default=list, help_text='List of coaching certifications')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('athletes', models.ManyToManyField(blank=True, help_text='Athletes coached by this coach', related_name='coaches', to='core.athlete')),
                ('team', models.ForeignKey(blank=True, help_text='Primary team this coach is associated with', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_coaches', to='core.team')),
                ('user', models.OneToOneField(help_text='User account associated with this coach', on_delete=django.db.models.deletion.CASCADE, related_name='coach_profile', to=settings.AUTH_USER_MODEL)),
                ('registration_code_used', models.ForeignKey(blank=True, help_text='Coach code used during registration', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_coach', to='core.coachcode')),
            ],
            options={
                'verbose_name_plural': 'Coaches',
                'db_table': 'core_coach',
            },
        ),
    ]
